{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","gameName","rank","sfx","handleGameNameChange","bind","handleRankChange","handleSFXChange","event","this","setState","target","value","className","Container","Row","Col","class","Form","Group","controlId","Label","Control","type","onChange","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAAe,I,0CC0EAA,E,kDAjEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CAACC,SAAU,OAAQC,KAAM,WAAYC,IAAK,uBAEvD,EAAKC,qBAAuB,EAAKA,qBAAqBC,KAA1B,gBAC5B,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBAPN,E,wDAUnB,SAAqBG,GACnBC,KAAKC,SAAS,CAACT,SAAUO,EAAMG,OAAOC,U,8BAGxC,SAAiBJ,GACfC,KAAKC,SAAS,CAACR,KAAMM,EAAMG,OAAOC,U,6BAGpC,SAAgBJ,GACdC,KAAKC,SAAS,CAACP,IAAKK,EAAMG,OAAOC,U,oBAGnC,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,oBAAIC,MAAM,cAAV,wDAGJ,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,eAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,yBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOX,MAAOH,KAAKT,MAAMC,SAAUuB,SAAUf,KAAKL,0BAEvE,eAACc,EAAA,EAAKC,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOX,MAAOH,KAAKT,MAAME,KAAMsB,SAAUf,KAAKH,sBAEnE,eAACY,EAAA,EAAKC,MAAN,CAAYC,UAAU,UAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOX,MAAOH,KAAKT,MAAMG,IAAKqB,SAAUf,KAAKF,0BAItE,eAACS,EAAA,EAAD,wDAC+CP,KAAKT,MAAMC,SAD1D,QACyEQ,KAAKT,MAAMC,SADpF,koBAOoDQ,KAAKT,MAAMC,SAP/D,qCAQqCQ,KAAKT,MAAMC,SARhD,oBAQ2EQ,KAAKT,MAAME,KARtF,+BAQwHO,KAAKT,MAAMG,IARnI,qB,GAjDMsB,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9e2faeca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {gameName: 'APEX', rank: 'Platinum', sfx: 'PEW PEW PEW PEW PEW'};\n\n    this.handleGameNameChange = this.handleGameNameChange.bind(this);\n    this.handleRankChange = this.handleRankChange.bind(this);\n    this.handleSFXChange = this.handleSFXChange.bind(this);\n  }\n\n  handleGameNameChange(event) {\n    this.setState({gameName: event.target.value});\n  }\n\n  handleRankChange(event) {\n    this.setState({rank: event.target.value});\n  }\n\n  handleSFXChange(event) {\n    this.setState({sfx: event.target.value});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Row>\n            <Col>\n              <h1 class=\"text-center\">Kureiji Ollie APEX Copypasta Generator</h1>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form>\n                <Form.Group controlId=\"formGameName\">\n                  <Form.Label>Game Name:</Form.Label>\n                  <Form.Control type=\"text\" value={this.state.gameName} onChange={this.handleGameNameChange}/>\n                </Form.Group>\n                <Form.Group controlId=\"formRank\">\n                  <Form.Label>Rank:</Form.Label>\n                  <Form.Control type=\"text\" value={this.state.rank} onChange={this.handleRankChange} />\n                </Form.Group>\n                <Form.Group controlId=\"formSFX\">\n                  <Form.Label>SFX:</Form.Label>\n                  <Form.Control type=\"text\" value={this.state.sfx} onChange={this.handleSFXChange}  />\n                </Form.Group>\n              </Form>\n            </Col>\n            <Col>\n                Ok, so allow me to explain a little about {this.state.gameName}. So {this.state.gameName} is a serotonin as stimulus a pleasure of joy and magical keeper of continent. \n                So, it's always has a mysterious powers that keeps adrenaline rush that we all need in our lives. \n                It's a sanctuary for everyone to recollect and enjoy the bliss of gun chests and armor cracks. \n                It's also what unites us into one and breaks loneliness with teamwork. \n                It's the most reassuring thing in the world ever and just having a dangling in your desktop without playing it, giving streams and comfort. \n                If you don't have any friends, it will give you two. If you want some alone time you can go to firing range. \n                There is nothing more enjoyable than a game of {this.state.gameName}. \n                So if anything, please download {this.state.gameName} and come to the {this.state.rank} WITH ME RIGHT NOW LET'S GO {this.state.sfx}!!!\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}